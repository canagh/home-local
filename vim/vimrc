aug vimrc " aug は 遅いらしいので ひとつに
    au!
aug end
let mapleader=" "

" neobundle.vim {{{
" initialize {{{
set nocompatible

if has('vim_starting')
    set runtimepath+=~/.vim/bundle/neobundle.vim
    call neobundle#rc(expand('~/.vim/bundle/'))
endif
" }}}

" neobundle {{{
" originalrepos on github
" plugin manageings
NeoBundle 'Shougo/neobundle.vim'
" Shougo/vimproc
NeoBundle 'Shougo/vimproc', {
\   'build' : {
\       'windows' : 'make -f make_mingw32.mak',
\       'cygwin' : 'make -f make_cygwin.mak',
\       'mac' : 'make -f make_mac.mak',
\       'unix' : 'make -f make_unix.mak',
\   },
\ }
" }}}

" edit
NeoBundle 'tpope/vim-surround'
NeoBundle 'Align'

" history
NeoBundle 'vim-scripts/repeat.vim'
NeoBundleLazy "sjl/gundo.vim", { "autoload": { "commands": ['GundoToggle'] }} " {{{
nnoremap <Leader>gu :GundoToggle<CR>
" }}}

" tagbar {{{
NeoBundleLazy 'majutsushi/tagbar', {
\   "autoload": {
\       "commands": ["TagbarToggle"],
\   },
\   "build": {
\       "unix": "sudo apt-get install exuberant-ctags",
\       "mac": "brew install ctags",
\   },
\ }
nmap <Leader>gt :TagbarToggle<CR>
" }}}

" unite {{{
NeoBundle 'Shougo/unite.vim'
" let g:unite_enable_start_insert = 1
" The prefix key.
nnoremap [unite] <Nop>
nmap <Leader>u [unite]
" unite.vim keymap
nnoremap [unite]u  :<C-u>Unite -no-split<Space>
nnoremap <silent> [unite]b :<C-u>Unite buffer<CR>
nnoremap <silent> [unite]f :<C-u>UniteWithBufferDir -buffer-name=files file<CR>
nnoremap <silent> [unite]F :<C-u>Unite -buffer-name=files file<CR>
nnoremap <silent> [unite]r :<C-u>Unite -buffer-name=register register<CR>
nnoremap <silent> [unite]m :<C-u>Unite file_mru<CR>
nnoremap <silent> [unite]vr :UniteResume<CR>/"

NeoBundle 'Shougo/unite-outline', { 'depends' : 'Shougo/unite.vim' }
nnoremap <silent> [unite]o :<C-u>Unite<Space>outline<CR>

NeoBundle 'Shougo/vimfiler', { 'depends' : 'Shougo/unite.vim' }
let g:vimfiler_as_default_explorer = 1
au vimrc FileType vimfiler nnoremap q <Plug>(vimfiler_exit)
au vimrc FileType vimfiler nnoremap Q :<C-U>quit<CR>
" }}}

NeoBundle 'bling/vim-airline' " {{{
" Q. The statusline does not appear until I create a split.
" A. This is the default setting of |laststatus|.  If you want it to appear all the time, add the following to your vimrc: >
set laststatus=2
" to avoid an error on the anzu.vim's extension
let g:airline_section_z = '%3p%% %{g:airline_symbols.linenr} %3l:%3c'
" }}}

" neocomplcache {{{

NeoBundleLazy 'Shougo/neocomplcache', { 'autoload' : {'insert' : '1'} } " {{{
let g:neocomplcache_enable_at_startup = 1
" Enable omni completion. Not required if they are already set elsewhere in .vimrc
au vimrc FileType css           setl omnifunc=csscomplete#CompleteCSS
au vimrc FileType html,markdown setl omnifunc=htmlcomplete#CompleteTags
au vimrc FileType javascript    setl omnifunc=javascriptcomplete#CompleteJS
" }}}

NeoBundleLazy 'Shougo/neosnippet',    { 'autoload' : {'insert' : '1'} } " {{{
" Plugin key-mappings.
imap <C-k> <Plug>(neosnippet_expand_or_jump)
smap <C-k> <Plug>(neosnippet_expand_or_jump)
" SuperTab like snippets behavior.
imap <expr><TAB> neosnippet#expandable() ? "\<Plug>(neosnippet_expand_or_jump)" : pumvisible( ? "\<C-n>" : "\<TAB>"
smap <expr><TAB> neosnippet#expandable() ? "\<Plug>(neosnippet_expand_or_jump)" : "\<TAB>"
" For snippet_complete marker.
if has('conceal')
    set conceallevel=2 concealcursor=i
endif
" }}}

NeoBundleLazy 'ujihisa/neco-look',    { 'autoload' : {'insert' : '1'} }
" }}}

" jump
NeoBundle 'osyo-manga/vim-anzu' "{{{
nmap n <Plug>(anzu-n)
nmap N <Plug>(anzu-N)
nmap * <Plug>(anzu-star)
nmap # <Plug>(anzu-sharp)
let g:airline#extensions#anzu#enabled = 1
let g:anzu_search_limit = 1000
" }}}
NeoBundle 'matchit.zip'
" NeoBundle 'Lokaltog/vim-easymotion' " 使ってない
" NeoBundle 'camelcasemotion'

" marking
NeoBundle 'nathanaelkane/vim-indent-guides' " {{{
let g:indent_guides_enable_on_vim_startup=1
let g:indent_guides_guide_size=1
" }}}
"NeoBundle 'cohama/vim-insert-linenr'

NeoBundle 'thinca/vim-quickrun' " {{{
let g:quickrun_config={}
" }}}

NeoBundle 'YankRing.vim' " {{{
let g:yankring_history_dir = '$HOME/.vim'
nnoremap <silent> <Leader>yu :YRShow<CR>
nnoremap <Leader>y/ :YRSearch<Space>
" }}}

" colorscheme
"NeoBundle 'desert256.vim'
NeoBundle 'w0ng/vim-hybrid'

NeoBundleLazy 'tyru/open-browser.vim', { 'autoload': { 'mappings': '<Plug>(openbrowser-' } } " {{{
let g:netrw_nogx = 1 " disable netrw's gx mapping.
nmap gx <Plug>(openbrowser-smart-search)
vmap gx <Plug>(openbrowser-smart-search)
" }}}
NeoBundle 'sudo.vim'
NeoBundle 'tyru/autochmodx.vim' " {{{
let g:autochmodx_scriptish_file_patterns = [ '\c.*\.sh$' ]
let g:autochmodx_no_CursorHold_autocmd = 1
" }}}

NeoBundle 'rkitover/vimpager'

" syntastic {{{
NeoBundle "scrooloose/syntastic", {
\   "build": {
\       "mac" : ["pip install flake8", "npm -g install coffeelint"],
\       "unix": ["pip install flake8", "npm -g install coffeelint"],
\   },
\ }
" }}}

" language {{{

" markdown
NeoBundleLazy 'tpope/vim-markdown', { "autoload" : { "filetypes" : [ "markdown" ] } }
"NeoBundle 'plasticboy/vim-markdown'
"NeoBundle 'suan/vim-instant-markdown'

" c++
"NeoBundle 'Rip-Rip/clang_complete'
NeoBundleLazy 'vim-jp/cpp-vim',         { "autoload" : { "filetypes" : [ "cpp" ] } }
NeoBundleLazy 'vim-scripts/opengl.vim', { "autoload" : { "filetypes" : [ "cpp", "c" ] } }
NeoBundleLazy 'kana/vim-smartchr',      { "autoload" : { "filetypes" : [ "cpp", "c" ] } } " 現在 c,cpp でしか使ってない
" NeoBundleLazy 'kana/vim-smartinput', { 'autoload' : {'insert' : '1'} } " 併用する? http://ac-mopp.blogspot.jp/2013/07/vim-smart-input.html

" haskell
NeoBundleLazy 'ujihisa/neco-ghc',            { "autoload" : { "filetypes" : [ "haskell" ] } }
NeoBundleLazy 'lukerandall/haskellmode-vim', { "autoload" : { "filetypes" : [ "haskell" ] } } " {{{
let g:haddock_browser='firefox'
" }}}
NeoBundleLazy 'eagletmt/ghcmod-vim',         { "autoload" : { "filetypes" : [ "haskell" ] } }
NeoBundleLazy 'bitc/vim-hdevtools',          { "autoload" : { "filetypes" : [ "haskell" ] } }
NeoBundleLazy 'eagletmt/unite-haddock',      { "autoload" : { "filetypes" : [ "haskell" ] } }
NeoBundleLazy 'dag/vim2hs',                  { "autoload" : { "filetypes" : [ "haskell" ] } }

" python
NeoBundleLazy 'mitechie/pyflakes-pathogen',     { "autoload" : { "filetypes" : [ "python" ] } }
NeoBundleLazy 'sontek/rope-vim',                { "autoload" : { "filetypes" : [ "python" ] } }
NeoBundleLazy 'lambdalisue/vim-django-support', { "autoload" : { "filetypes" : [ "python" ] } }
NeoBundleLazy 'davidhalter/jedi-vim',           { "autoload" : { "filetypes" : [ "python" ] } } " require $ git submodule update --init

" html
NeoBundleLazy 'mattn/zencoding-vim', { "autoload" : { "filetypes" : [ "html" ] } }
NeoBundleLazy 'othree/html5.vim',    { "autoload" : { "filetypes" : [ "html" ] } }

" css
NeoBundleLazy 'hail2u/vim-css3-syntax', { "autoload" : { "filetypes" : [ "css" ] } }
" NeoBundle 'css_color.vim' " 重すぎ

" coffeescript
NeoBundleLazy 'kchmck/vim-coffee-script', { "autoload" : { "filetypes" : [ "coffee" ] } }

" haxe
NeoBundleLazy 'jdonaldson/vaxe', { "autoload" : { "filetypes" : [ "haxe" ] } }
"NeoBundle 'MarcWeber/vim-haxe'

" }}}

" finalize {{{
filetype plugin indent on
" }}}
" }}}

syntax on
set modeline

set autoindent
set smartindent

set expandtab
set shiftwidth=4

set relativenumber "相対行表示
au vimrc CursorMoved,CursorMovedI,WinLeave * setl nocursorline
au vimrc CursorHold,CursorHoldI            * setl cursorline
au vimrc CursorMoved,CursorMovedI,WinLeave * setl nocursorcolumn
au vimrc CursorHold,CursorHoldI            * setl cursorcolumn
hi CursorColumn term=underline cterm=underline ctermbg=none
set report=0
set ruler
set list

set backup " {{{
if has('persistent_undo')
    set undodir=~/.vim/undo
    if !isdirectory(&undodir)
        call mkdir(&undodir)
    endif
    set undofile
endif " }}}

set history=128

set hlsearch " highlightする
set incsearch " incremental検索
" 大文字を混ぜて検索した場合だけ大文字/小文字を区別する
set ignorecase
set smartcase

" 日本語に対応 UTF-8を使う {{{
set fileencodings=utf-8,euc-jp,cp932,iso-2022-jp
set fileformats=unix,dos,mac
setl fenc=utf-8
setl ff=unix
" }}}

" 空白文字の表示 {{{
set listchars=trail:_,tab:>\ 
hi ZenkakuSpace cterm=underline ctermfg=lightblue guibg=white
match ZenkakuSpace /　/
"}}}

" Q で :q
nnoremap <silent> Q :<C-u>quit<CR>

" colorscheme {{{
set t_Co=256
set background=light
let g:hybrid_use_Xresources = 1
colorscheme hybrid
" }}}
