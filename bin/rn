#!/usr/bin/env python

import argparse

parser = argparse.ArgumentParser()
parser.add_argument('files', metavar='FILE', nargs='+')
parser.add_argument('format', metavar='FORMAT',
        help='''when the file name is foo.bar.qux:
| hoge -> hoge
| {}.hoge -> foo.bar.qux.hoge
| piyo.{} -> piyo.foo.bar.qux
| .hoge -> foo.hoge
| piyo. -> piyo.bar.qux''')
parser.add_argument('-s', '--simulate',
        action='store_const', const=True, default=False)
args = parser.parse_args()

import os

def aformat(fmt, x):
    if fmt.find('{}') != -1:
        return fmt.replace('{}', x)
    try:
        (base, ext) = x.split(os.path.extsep,1)
    except ValueError:
        (base, ext) = (x, x)
    if fmt.startswith('.'):
        return base + fmt
    if fmt.endswith('.'):
        return fmt + ext
    return fmt

for fileh in args.files:
    dirn, basen = os.path.split(fileh)
    newn = aformat(args.format, basen)
    if args.simulate:
        print('in `' + dirn + "': rename `" + basen + "' `" + newn + "'")
    else:
        os.rename(fileh, os.path.join(dirn, newn))
