#!/bin/bash

# options
recursive=
simulate=
method=find
type=backup

help() {
    echo $(basename "$0")' [-r|--recursive] [-s|--simulate] [-m|--method METHOD] [-t|--type TYPE] [--] [DIRECTORY]...'
}
error() { echo $(basename "$0"): error: "$@" >&2 ; }
abort() { error "$@" ; exit 1 ; }

OPTS=$(getopt -n "$(basename $0)" -o h\?rsm:t: -l help,recursive,simulate,method:,type: -- "$@")
[ $? -ne 0 ] && exit 1
eval set -- "$OPTS"

while [ "$1" != -- ] ; do
    case "$1" in
        -h | -\? | --help ) help ; exit ;;
        -r | --recursive ) recursive=t ;;
        -s | --simulate ) simulate=t ;;
        -m | --method ) method="$2" ; shift ;;
        -t | --type ) type="$2" ; shift ;;
        -- ) break ;;
        * ) abort unknown argument: \`"$1"\' ;;
    esac
    shift
done
shift

# exec
case "$method" in
    find )
        if [[ "$recursive" ]] ; then depth=() ; else depth=(-maxdepth 1) ; fi
        if [[ "$simulate" ]] ; then actions=(-print) ; else actions=(-print -delete) ; fi
        case "$type" in
            backup ) pred=(\( -name '*~' -or -name '#*#' -or -name '.\#*' \)) ;;
            swp ) pred=(-name '.*.swp') ;;
            * ) abort unknown type \`"$type"\' ;;
        esac
        find -H "${@:-$PWD}" "${depth[@]}" "${pred[@]}" "${actions[@]}"
        ;;
    locate )
        [[ "$type" = backup ]] || abort method \`locate\' only supports type \`backup\'
        if [[ "$recursive" ]] ; then depth='\(/[^/]*\)*' ; else depth='' ; fi
        if [[ "$simulate" ]] ; then action(){ cat ; } ; else action(){ tee /dev/stdout | xargs rm -f ; } ; fi
        for i in "${@:-$PWD}" ; do
            locate -r \^"$(cd "$i" ; pwd)""$depth"/'\(#[^/]*#\|[^/]*~\)'\$ | action
        done
        ;;
    * ) abort unknown method: \`"$method"\' ;;
esac
