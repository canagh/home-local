#!/bin/bash

help() {
    cat <<EOF
Usage: `basename "$0"` [option..] command [arg..]
EOF
}
error() {
    echo `basename "$0"`: error: "$@" >&2
}
abort() {
    error "$@"
    exit 1
}

OPTS=$(getopt -n $(basename "$0") -o h\?n:e:tHr:l -l help,name:,extension:,text,txt,html,htm,replace,left -- "$@")
[ $? -ne 0 ] && exit 1
eval set -- "$OPTS"

name=XXXXXX
replace='{}'
remove=t
while [ $# != 0 ] ; do
    case $1 in
        -h | --help | -\? ) help ; exit ;;
        -n | --name )         name=$2 ; shift ;;
        -e | --extension )    name=XXXXXX.$2 ; shift ;;
        -t | --text | --txt ) name=XXXXXX.txt ;;
        -H | --html | --htm ) name=XXXXXX.html ;;
        -r | --replace ) replace=$2 ; shift ;;
        -l | --left ) remove= ;;
        -- ) shift ; break ;;
        * ) abort something wrong with options: \`"$1"\' ;;
    esac
    shift
done
[ $# != 0 ] || abort missing command

tempfile=`mktemp -t "$name"`
[ $? == 0 ] || abort mktemp failed
[ "$remove" ] && trap "rm -f -- '$tempfile'" EXIT

cat > $tempfile
argv=("$@")
for i in `seq $#` ; do
    if [ "${argv[$i]}" = "$replace" ] ; then
        did_replace=t
        argv[$i]=$tempfile
    fi
done
[ "$did_replace" ] || argv=("${argv[@]}" $tempfile)
"${argv[@]}" # call command

[ "$remove" ] && { rm -f -- "$tempfile" ; trap - EXIT ; }
