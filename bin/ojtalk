#!/bin/bash

# for open-jtalk 1.04

# to install in ubuntu
# $ sudo apt get install open-jtalk open-jtalk-mecab-naist-jdic hts-voice-nitech-jp-atr503-m001

# thanks to takayan, http://neu101.seesaa.net/archives/201002-1.html

if [ "`uname | grep MINGW`" ]; then
    DICDIR=/usr/local/dic
    VDIRBASE=/usr/local/hts-voice
    DEFAULT_VOICE_NAME=hts_voice_nitech_jp_atr503_m001
    mingw=t
else
    DICDIR=/var/lib/mecab/dic/open-jtalk/naist-jdic
    VDIRBASE=/usr/share/hts-voice
    DEFAULT_VOICE_NAME=nitech-jp-atr503-m001
    mingw=
fi

# default parameters
S=48000
P=240
A=0.55
G=0
B=0.0
U=0.5
Z=1600
JM=1.0
JF=1.0
JL=1.0

if [ "$mingw" ]; then
    CURDIR=`dirname "$0"`
    TEMPTXTFILE=$CURDIR/_text.txt
    TEMPWAVFILE=$CURDIR/_wave.wav
else
    TEMPTXTFILE=$(mktemp /tmp/ojtalk_txt_XXXXXXXX)
    TEMPWAVFILE=$(mktemp /tmp/ojtalk_wav_XXXXXXXX)
fi

VDIR="$VDIRBASE"/"$DEFAULT_VOICE_NAME"
L_SWITCH=
QUIET_SWITCH=0
S_VALUE=
P_VALUE=
A_VALUE=
G_VALUE=
B_VALUE=
U_VALUE=
Z_VALUE=
JM_VALUE=
JF_VALUE=
JL_VALUE=
OT_VALUE=/dev/null
OW_VALUE=
TEXT=

error(){
    cmd=`basename $0`
    message="Bad parameter!"
    [ "$1" ] && message="$1"
    echo "$cmd"': '"$message"
    exit 1
}

while [ "$1" ]; do
    case "$1" in
        -h | --help )
            echo $(basename "$0")' [OPTION]... TEXT...'
            exit
            ;;
        --list )
            ls "$VDIRBASE"
            exit
            ;;
        -l ) L_SWITCH=-l ;;
        -quiet ) QUIET_SWITCH=1 ;;
        - )
            data=$(tr '\n\r' '  ')
            TEXT="$TEXT $data"
            ;;
        * )
            use_arg=t
            case "$1" in
                -vname ) VDIR="$VDIRBASE"/"$2" ;;
                -vdir ) VDIR="$2" ;;
                -ow ) OW_VALUE="$2" ;;
                -ot ) OT_VALUE="$2" ;;
                -s ) S_VALUE="$2" ;;
                -p ) P_VALUE="$2" ;;
                -a ) A_VALUE="$2" ;;
                -g ) G_VALUE="$2" ;;
                -b ) B_VALUE="$2" ;;
                -u ) U_VALUE="$2" ;;
                -jm ) JM_VALUE="$2" ;;
                -jf ) JF_VALUE="$2" ;;
                -jl ) JL_VALUE="$2" ;;
                -z ) Z_VALUE="$2" ;;
                -f )
                    [ -f "$2" ] || error 'No text file: '"$2"
                    data=$(cat "$2" | tr '\n\r' '  ')
                    TEXT="$TEXT $data"
                    ;;
                * )
                    use_arg=
                    TEXT="$TEXT $1"
                    ;;
            esac
            if [ "$use_arg" ]; then
                [ "$2" ] || error
                shift
            fi
            ;;
    esac
    shift
done

[ -d "$DICDIR" ] || error 'No dic directory : '"$DICDIR"
[ -d "$VDIR" ] || error 'No voice directory : '"$VDIR"

if [ -f "$VDIR"/voice.info ]; then
    getparam() {
       echo "$1" | sed 's/^'"$2"'=//'
    }
    while read line; do
        [[ "$line" =~ ^s=  ]] &&  S=`getparam "$line" s`
        [[ "$line" =~ ^p=  ]] &&  P=`getparam "$line" p`
        [[ "$line" =~ ^a=  ]] &&  A=`getparam "$line" a`
        [[ "$line" =~ ^g=  ]] &&  G=`getparam "$line" g`
        [[ "$line" =~ ^b=  ]] &&  B=`getparam "$line" b`
        [[ "$line" =~ ^u=  ]] &&  U=`getparam "$line" u`
        [[ "$line" =~ ^z=  ]] &&  Z=`getparam "$line" z`
        [[ "$line" =~ ^jm= ]] && JM=`getparam "$line" jm`
        [[ "$line" =~ ^jf= ]] && JF=`getparam "$line" jf`
        [[ "$line" =~ ^jl= ]] && JL=`getparam "$line" jl`
    done < "$VDIR"/voice.info
fi

S_VALUE=${S_VALUE:-$S}
P_VALUE=${P_VALUE:-$P}
A_VALUE=${A_VALUE:-$A}
G_VALUE=${G_VALUE:-$G}
B_VALUE=${B_VALUE:-$B}
U_VALUE=${U_VALUE:-$U}
Z_VALUE=${Z_VALUE:-$Z}
JM_VALUE=${JM_VALUE:-$JM}
JF_VALUE=${JF_VALUE:-$JF}
JL_VALUE=${JL_VALUE:-$JL}

[ "$TEXT" ] || error 'No message given'
echo $TEXT >$TEMPTXTFILE
[ -f $TEMPTXTFILE ] || error 'No temp file : '"$TEMPTXTFILE"

open_jtalk \
-x  $DICDIR \
-td $VDIR/tree-dur.inf \
-tm $VDIR/tree-mgc.inf \
-tf $VDIR/tree-lf0.inf \
-tl $VDIR/tree-lpf.inf \
-md $VDIR/dur.pdf \
-mm $VDIR/mgc.pdf \
-mf $VDIR/lf0.pdf \
-ml $VDIR/lpf.pdf \
-dm $VDIR/mgc.win1 \
-dm $VDIR/mgc.win2 \
-dm $VDIR/mgc.win3 \
-df $VDIR/lf0.win1 \
-df $VDIR/lf0.win2 \
-df $VDIR/lf0.win3 \
-dl $VDIR/lpf.win1 \
-ow $TEMPWAVFILE \
-ot $OT_VALUE \
-s  $S_VALUE \
-p  $P_VALUE \
-a  $A_VALUE \
-g  $G_VALUE \
-b  $B_VALUE \
$L_SWITCH \
-u  $U_VALUE \
-em $VDIR/tree-gv-mgc.inf \
-ef $VDIR/tree-gv-lf0.inf \
-cm $VDIR/gv-mgc.pdf \
-cf $VDIR/gv-lf0.pdf \
-jm $JM_VALUE \
-jf $JF_VALUE \
-jl $JL_VALUE \
-k  $VDIR/gv-switch.inf \
-z  $Z_VALUE \
$TEMPTXTFILE

[ -z "$mingw" -a -f "$TEMPWAVFILE" -a $QUIET_SWITCH == 0 ] && aplay -q $TEMPWAVFILE
[ "$OW_VALUE" ] && cp $TEMPWAVFILE $OW_VALUE
rm -f $TEMPWAVFILE
rm -f $TEMPTXTFILE
