import Prelude hiding ( {- Category (.), id, -} {- Foldable -} foldrM, foldlM, traverse_, for_, sequenceA_, asum, mapM_, forM_, sequence_, msum, toList, concat, concatMap, and, or, any, all, sum, product, maximum, maximumBy, minimum, minimumBy, elem, notElem, find )

import Control.Applicative
import Control.Arrow
-- import Control.Category
import Control.Monad

import Data.Foldable
import Data.Traversable

import Data.Char
import Data.Either
import Data.Function -- hiding ( {- Category -} (.), id )
import Data.Functor
import Data.IORef
import Data.List hiding ( {- Foldable -} foldrM, foldlM, traverse_, for_, sequenceA_, asum, mapM_, forM_, sequence_, msum, toList, concat, concatMap, and, or, any, all, sum, product, maximum, maximumBy, minimum, minimumBy, elem, notElem, find )
import Data.Maybe
import Data.Monoid
import Data.String

import System.IO
import System.Random

-- transformers
import Data.Functor.Identity
import Data.Functor.Compose

:set prompt ">>> "
