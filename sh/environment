#!/bin/bash

export LANG=en_US.UTF-8
#export LANG=C

inpath() { which "$@" >/dev/null 2>&1 ; }
not() { "$@" ; [ $? != 0 ] ; }

if   inpath vim  ; then export VISUAL=vim
elif inpath vi   ; then export VISUAL=vi
elif inpath nano ; then export VISUAL=nano
fi
export EDITOR=$VISUAL
export PAGER=less
if   inpath w3m  ; then export BROWSER=w3m
elif inpath lynx ; then export BROWSER=lynx
fi

export PATH="$HOME"/share/bin:"$PATH"
export PATH="$HOME"/bin:"$PATH"

# python
export PYTHONSTARTUP="$HOME"/share/python/startup.py
## virtualenvwrapper
#for f in /usr/local/bin/virtualenvwrapper_lazy.sh /usr/local/bin/virtualenvwrapper.sh /usr/bin/virtualenvwrapper_lazy.sh /usr/bin/virtualenvwrapper.sh ; do
#    if [ -f "$f" ] ; then
#        source "$f"
#        break
#    fi
#done
## pythonbrew
#[[ -s "$HOME/.pythonbrew/etc/bashrc" ]] && source "$HOME/.pythonbrew/etc/bashrc"
## pythonz
#[[ -s "$HOME/.pythonz/etc/bashrc" ]] && source "$HOME/.pythonz/etc/bashrc"

# ruby
## rbenv
if not inpath rbenv ; then
    f="$HOME"/lib/rbenv/bin
    if [ -x "$f"/rbenv ] ; then
        export PATH="$f":"$HOME"/.rbenv/bin:"$PATH"
        eval "`rbenv init -`"
    fi
    unset f
fi

# haskell
export PATH="$HOME/.cabal/bin":"$PATH"

# javascript
## nvm
if [ ! "$NVM_DIR" ] ; then
    f="$HOME"/lib/nvm/nvm.sh
    if [ -f "$f" ] ; then
        NVM_DIR="$HOME/.nvm"
        source "$f"
        nvm use v0.10.21 >/dev/null
    fi
    unset f
fi

# make PATH unique
if inpath zsh ; then
    export PATH="`zsh -fc 'typeset -U path ; echo $PATH'`"
fi
